{"version":3,"sources":["components/Person.js","components/Utils.js","services/phonebook.js","App.js","index.js"],"names":["PersonForm","onChangeHandlers","values","onClickHandler","handleNameChange","handleNumberChange","newName","newNumber","onChange","value","type","onClick","Persons","persons","filter","deleteContactHandler","person","name","toLowerCase","includes","map","Person","number","id","Notification","message","success","className","baseURL","exports","getAll","axios","get","then","response","data","create","newObject","post","update","put","remove","delete","Filter","onChangeHandler","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","alertMessage","setAlertMessage","handlerFilterReset","hideAlertMessageHandler","setTimeout","updateContactHandler","contactDetail","find","trim","phoneBookService","updatedContactDetail","updateMessage","catch","error","customErrorMessage","useEffect","contactDetails","event","target","preventDefault","window","confirm","confirmationMessage","newContactDetail","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dc3411f.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst PersonForm = ({ onChangeHandlers, values, onClickHandler }) => {\n    const { handleNameChange, handleNumberChange } = onChangeHandlers;\n    const { newName, newNumber } = values;\n\n    return (\n        <form>\n            <div>\n                <label>\n                    name: <input onChange={handleNameChange} value={newName} />\n                </label>\n                <br />\n                <label>\n                    number: <input onChange={handleNumberChange} value={newNumber} />\n                </label>\n            </div>\n            <div>\n                <button type=\"submit\" onClick={onClickHandler}>add</button>\n            </div>\n        </form>\n    );\n};\n\n\nconst Persons = ({ persons, filter, deleteContactHandler }) => {\n    const personsToDisplay = persons.filter((person) =>\n        person.name.toLowerCase().includes(filter.toLowerCase())\n    )\n\n    return (\n        personsToDisplay.map(person =>\n            <Person key={person.name}\n                person={person}\n                deleteContactHandler={deleteContactHandler}\n            />\n        ))\n};\n\n\nconst Person = ({ person, deleteContactHandler }) => {\n\n    return (\n        <div>\n            {person.name} {person.number}\n        &nbsp;\n            <button onClick={() => deleteContactHandler(person.id, person.name)}>\n                delete\n        </button>\n        </div>\n    )\n};\n\n\nexport {PersonForm, Persons};","import React from 'react';\n\nimport '../index.css';\n\n\nconst Notification = ({ message, success }) => {\n    if (!message) {\n        return null;\n    }\n\n    if (success) {\n        return (\n            <div className=\"success\">\n                {message}\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className=\"error\">\n                {message}\n            </div>\n        )\n    }\n}\n\n\nexport default Notification;","import axios from 'axios';\n\n\nconst baseURL = \"/api/persons\"; // Proxied to backend host on production build\n\n\nconst getAll = () => {\n    const request = axios.get(baseURL);\n    return request.then(response => response.data);\n};\n\nconst create = (newObject) => {\n    const request = axios.post(baseURL, newObject);\n    return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject);\n    return request.then(response => response.data);\n};\n\nconst remove = (id) => axios.delete(`${baseURL}/${id}`);\n\n\nconst exports = { getAll, create, update, remove };\nexport default exports;","import React, { useState, useEffect } from 'react';\n\nimport { PersonForm, Persons } from './components/Person';\nimport Notification  from './components/Utils';\nimport phoneBookService from './services/phonebook';\n\n\nconst Filter = ({ onChangeHandler, value }) => {\n\n  return (\n    <div>\n      <label>\n        filter shown with<input onChange={onChangeHandler} value={value} />\n      </label>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [alertMessage, setAlertMessage] = useState(null);\n\n  const handlerFilterReset = () => { setNewName(\"\"); setNewNumber(\"\"); };\n  const hideAlertMessageHandler = () =>\n    setTimeout(() => setAlertMessage(null), 5000);\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n  const handleFilterChange = (event) => setNewFilter(event.target.value);\n\n  // Add contact\n  const addContactHandler = (event) => {\n    event.preventDefault();\n    const newObject = {\n      name: newName.trim(),\n      number: newNumber.trim()\n    };\n\n    // Check if contact detail already exists\n    const personNames = persons.map(person => person.name.toLowerCase());\n    if (personNames.includes(newName.trim().toLowerCase())) {\n      // If exists, update the number\n      let confirmationMessage = \"is already added to phonebook, replace\";\n      confirmationMessage += \" the old number with a new one?\";\n\n      if (window.confirm(`'${newName.trim()}' ${confirmationMessage}`)) {\n        updateContactHandler(newObject);\n        handlerFilterReset();\n      }\n      return; // Skip adding the same contact detail\n    }\n\n    phoneBookService.create(newObject)\n      .then(newContactDetail => {\n        setPersons(persons.concat(newContactDetail));\n        handlerFilterReset();\n        setAlertMessage({\n          message: `Added ${newContactDetail.name}`,\n          success: true\n        });\n        hideAlertMessageHandler();\n      })\n  };\n\n  // Modify contact\n  const updateContactHandler = (newObject) => {\n    const contactDetail = persons.find(person => {\n      return person.name.toLowerCase() === newName.trim().toLowerCase()\n    })\n\n    phoneBookService.update(contactDetail.id, newObject)\n      .then(updatedContactDetail => {\n        let updateMessage = `Updated ${newObject.name}`;\n        updateMessage += ` with phone number ${newObject.number}`;\n        setAlertMessage({ message: updateMessage, success: true });\n        hideAlertMessageHandler();\n\n        setPersons(persons.map(person =>\n          person.id !== updatedContactDetail.id\n            ? person\n            : updatedContactDetail\n        ))\n      })\n      .catch(error => {\n        let customErrorMessage = `Information of' ${contactDetail.name}' has`;\n        customErrorMessage += \" already been removed from the server\";\n        setPersons(persons.filter(person =>\n          person.id !== contactDetail.id\n        ))\n        setAlertMessage({ message: customErrorMessage, success: false });\n        hideAlertMessageHandler();\n      });\n  }\n\n  // Remove contact\n  const deleteContactHandler = (id, name) => {\n    if (!window.confirm(`Delete ${name}?`)) {\n      return null;\n    }\n\n    setPersons(persons.filter(person => person.id !== id));\n    return phoneBookService.remove(id, name)\n      .then(() => {\n        setAlertMessage({ message: `Deleted ${name}`, success: true });\n        hideAlertMessageHandler();\n      })\n      .catch(error => {\n        let customErrorMessage = `Information of '${name}' has already`;\n        customErrorMessage += \" been removed from the server\";\n        setAlertMessage({ message: customErrorMessage, success: false });\n        hideAlertMessageHandler();\n      });\n  };\n\n  // Effect hook\n  const effectHook = () => phoneBookService.getAll()\n    .then(contactDetails => setPersons(contactDetails));\n  useEffect(effectHook, []);\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={alertMessage ? alertMessage.message : null}\n        success={alertMessage ? alertMessage.success : null}\n      />\n\n      <Filter onChangeHandler={handleFilterChange} value={newFilter} />\n\n      <h2>add a new</h2>\n\n      <PersonForm\n        onChangeHandlers={{ handleNameChange, handleNumberChange }}\n        values={{ newName, newNumber }}\n        onClickHandler={addContactHandler}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons\n        persons={persons}\n        filter={newFilter}\n        deleteContactHandler={deleteContactHandler}\n      />\n    </div>\n  )\n};\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}